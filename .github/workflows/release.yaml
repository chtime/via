name: Build and Publish Container

on:
  push:
    branches: ["master", "feature/*"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["master"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate build version
        id: build_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # For tags, use the tag name without 'refs/tags/'
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            # For branches, use branch name and short SHA
            BRANCH=${GITHUB_REF#refs/heads/}
            SHA=$(git rev-parse --short HEAD)
            VERSION="${BRANCH}-${SHA}"
          else
            # For pull requests, use PR number and short SHA
            SHA=$(git rev-parse --short HEAD)
            VERSION="pr-${{ github.event.number }}-${SHA}"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_VERSION=${{ steps.build_version.outputs.version }}
            BUILD_DATE=${{ steps.build_version.outputs.build_date }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
